services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-web
    env_file:
      - .env
    environment:
      ENV_PATH: /app/.env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8000:8000"
    restart: always
    networks:
      - main
    volumes:
      - .:/app
      - shared_downloads:/app/shared_downloads 
    command: ["sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --timeout 120 --workers 3 --worker-class sync"]
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://127.0.0.1:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: postgres:15.4
    container_name: ${PROJECT_NAME}-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${USERNAME}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "5433:5432"
    restart: always
    networks:
      - main
    volumes:
      - YummyYard_pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2
    container_name: ${PROJECT_NAME}-cache
    restart: always
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ${PROJECT_NAME}-broker
    environment:
      RABBITMQ_DEFAULT_USER: ${USERNAME}
      RABBITMQ_DEFAULT_PASS: ${PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - main
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-celery
    entrypoint: ["celery"]
    command: ["-A", "config", "worker", "--loglevel=info"]
    env_file:
      - .env
    environment:
      ENV_PATH: /app/.env
    depends_on:
      web:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: always
    networks:
      - main
    volumes:
      - celerybeat_data:/app/celerybeat-schedule
      - shared_downloads:/app/shared_downloads
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery worker' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-beat
    entrypoint: ["celery"]
    command: ["-A", "config", "beat", "--loglevel=info"]
    env_file:
      - .env
    environment:
      ENV_PATH: /app/.env
    depends_on:
      web:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: always
    networks:
      - main
    volumes:
      - celerybeat_data:/app/celerybeat-schedule
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery beat' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-flower
    entrypoint: ["celery"]
    command: ["-A", "config", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      ENV_PATH: /app/.env
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5555 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  main:

volumes:
  YummyYard_pgdata:
  rabbitmq_data:
  celerybeat_data:
  shared_downloads: