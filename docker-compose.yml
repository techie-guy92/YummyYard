services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-web
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8000:8000"
    restart: always
    networks:
      - main
    volumes:
      - .:/app
    command: ["sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"]
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://127.0.0.1:8000/admin/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:15.4
    container_name: ${PROJECT_NAME}-postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    restart: always
    networks:
      - main
    volumes:
      - yummy-yard_pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2
    container_name: ${PROJECT_NAME}-redis-cache
    restart: always
    networks:
      - main

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ${PROJECT_NAME}-rabbitmq-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - main
    environment:
      RABBITMQ_DEFAULT_USER: techie-guy92
      RABBITMQ_DEFAULT_PASS: Soheil0014
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-celery
    entrypoint: ["celery"]
    command: ["-A", "config.celery_config", "worker", "--loglevel=info"]
    env_file:
      - .env
    depends_on:
      web:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: always
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery worker' || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-beat
    entrypoint: ["celery"]
    command: ["-A", "config.celery_config", "beat", "--loglevel=info"]
    env_file:
      - .env
    depends_on:
      web:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: always
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery beat' || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
    - ./celerybeat-schedule:/app/celerybeat-schedule

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-flower
    entrypoint: ["celery"]
    command: ["-A", "config.celery_config", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - rabbitmq
    networks:
      - main

networks:
  main:

volumes:
  yummy-yard_pgdata:
  rabbitmq_data: