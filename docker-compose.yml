services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-web
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always

  db:
    image: postgres:15.4
    container_name: ${PROJECT_NAME}-postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - yummy-yard_pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2
    container_name: ${PROJECT_NAME}-redis-cache
    ports:
      - "6379:6379"
    restart: always

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ${PROJECT_NAME}-rabbitmq-broker
    environment:
      URL_BROKER: ${URL_BROKER}
    ports:
      - "5672:5672"     
      - "15672:15672"   
    restart: always

  celery:
    build:
      context: .
    container_name: ${PROJECT_NAME}-celery
    command: celery -A config.celery_config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - rabbitmq
    restart: always

  beat:
    build:
      context: .
    container_name: ${PROJECT_NAME}-beat
    command: celery -A config.celery_config beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - rabbitmq
    restart: always

volumes:
  yummy-yard_pgdata:
